--- ../src-base/minecraft/net/minecraft/client/model/ModelRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/model/ModelRenderer.java
@@ -1,15 +1,21 @@
 package net.minecraft.client.model;
 
 import com.google.common.collect.Lists;
+
+import java.util.ArrayList;
 import java.util.List;
 import net.minecraft.client.renderer.BufferBuilder;
 import net.minecraft.client.renderer.GLAllocation;
 import net.minecraft.client.renderer.GlStateManager;
+import net.minecraft.client.renderer.RenderGlobal;
 import net.minecraft.client.renderer.Tessellator;
+import net.minecraft.util.ResourceLocation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import net.optifine.entity.model.anim.ModelUpdater;
+import optifine.Config;
+import optifine.ModelSprite;
 
-@SideOnly(Side.CLIENT)
 public class ModelRenderer
 {
     public float field_78801_a;
@@ -34,9 +40,30 @@
     public float field_82906_o;
     public float field_82908_p;
     public float field_82907_q;
+    //op add
+    public List spriteList;
+    public boolean mirrorV;
+    public float scaleX;
+    public float scaleY;
+    public float scaleZ;
+    private float savedScale;
+    private ResourceLocation textureLocation;
+    private String id;
+    private ModelUpdater modelUpdater;
+    private RenderGlobal renderGlobal;
 
     public ModelRenderer(ModelBase p_i1172_1_, String p_i1172_2_)
     {
+        //op add
+        this.spriteList = new ArrayList();
+        this.mirrorV = false;
+        this.scaleX = 1.0F;
+        this.scaleY = 1.0F;
+        this.scaleZ = 1.0F;
+        this.textureLocation = null;
+        this.id = null;
+        this.renderGlobal = Config.getRenderGlobal();
+        //end
         this.field_78801_a = 64.0F;
         this.field_78799_b = 32.0F;
         this.field_78806_j = true;
@@ -108,7 +135,8 @@
         this.field_78798_e = p_78793_3_;
     }
 
-    public void func_78785_a(float p_78785_1_)
+    @SideOnly(Side.CLIENT)
+    public void renderO(float scale)
     {
         if (!this.field_78807_k)
         {
@@ -116,9 +144,9 @@
             {
                 if (!this.field_78812_q)
                 {
-                    this.func_78788_d(p_78785_1_);
+                    this.func_78788_d(scale);
                 }
-
+                
                 GlStateManager.func_179109_b(this.field_82906_o, this.field_82908_p, this.field_82907_q);
 
                 if (this.field_78795_f == 0.0F && this.field_78796_g == 0.0F && this.field_78808_h == 0.0F)
@@ -131,30 +159,30 @@
                         {
                             for (int k = 0; k < this.field_78805_m.size(); ++k)
                             {
-                                ((ModelRenderer)this.field_78805_m.get(k)).func_78785_a(p_78785_1_);
+                                ((ModelRenderer)this.field_78805_m.get(k)).func_78785_a(scale);
                             }
                         }
                     }
                     else
                     {
-                        GlStateManager.func_179109_b(this.field_78800_c * p_78785_1_, this.field_78797_d * p_78785_1_, this.field_78798_e * p_78785_1_);
+                        GlStateManager.func_179109_b(this.field_78800_c * scale, this.field_78797_d * scale, this.field_78798_e * scale);
                         GlStateManager.func_179148_o(this.field_78811_r);
 
                         if (this.field_78805_m != null)
                         {
                             for (int j = 0; j < this.field_78805_m.size(); ++j)
                             {
-                                ((ModelRenderer)this.field_78805_m.get(j)).func_78785_a(p_78785_1_);
+                                ((ModelRenderer)this.field_78805_m.get(j)).func_78785_a(scale);
                             }
                         }
 
-                        GlStateManager.func_179109_b(-this.field_78800_c * p_78785_1_, -this.field_78797_d * p_78785_1_, -this.field_78798_e * p_78785_1_);
+                        GlStateManager.func_179109_b(-this.field_78800_c * scale, -this.field_78797_d * scale, -this.field_78798_e * scale);
                     }
                 }
                 else
                 {
                     GlStateManager.func_179094_E();
-                    GlStateManager.func_179109_b(this.field_78800_c * p_78785_1_, this.field_78797_d * p_78785_1_, this.field_78798_e * p_78785_1_);
+                    GlStateManager.func_179109_b(this.field_78800_c * scale, this.field_78797_d * scale, this.field_78798_e * scale);
 
                     if (this.field_78808_h != 0.0F)
                     {
@@ -177,7 +205,7 @@
                     {
                         for (int i = 0; i < this.field_78805_m.size(); ++i)
                         {
-                            ((ModelRenderer)this.field_78805_m.get(i)).func_78785_a(p_78785_1_);
+                            ((ModelRenderer)this.field_78805_m.get(i)).func_78785_a(scale);
                         }
                     }
 
@@ -188,8 +216,136 @@
             }
         }
     }
+    public void func_78785_a(float p_78785_1_)
+    {
+        if (!this.field_78807_k && this.field_78806_j)
+        {
+            if (!this.field_78812_q)
+            {
+                this.func_78788_d(p_78785_1_);
+            }
 
-    public void func_78791_b(float p_78791_1_)
+            int i = 0;
+
+            if (this.textureLocation != null && !this.renderGlobal.renderOverlayDamaged)
+            {
+                if (this.renderGlobal.renderOverlayEyes)
+                {
+                    return;
+                }
+
+                i = GlStateManager.getBoundTexture();
+                Config.getTextureManager().func_110577_a(this.textureLocation);
+            }
+
+            if (this.modelUpdater != null)
+            {
+                this.modelUpdater.update();
+            }
+
+            boolean flag = this.scaleX != 1.0F || this.scaleY != 1.0F || this.scaleZ != 1.0F;
+            GlStateManager.func_179109_b(this.field_82906_o, this.field_82908_p, this.field_82907_q);
+
+            if (this.field_78795_f == 0.0F && this.field_78796_g == 0.0F && this.field_78808_h == 0.0F)
+            {
+                if (this.field_78800_c == 0.0F && this.field_78797_d == 0.0F && this.field_78798_e == 0.0F)
+                {
+                    if (flag)
+                    {
+                        GlStateManager.func_179152_a(this.scaleX, this.scaleY, this.scaleZ);
+                    }
+
+                    GlStateManager.func_179148_o(this.field_78811_r);
+
+                    if (this.field_78805_m != null)
+                    {
+                        for (int l = 0; l < this.field_78805_m.size(); ++l)
+                        {
+                            ((ModelRenderer)this.field_78805_m.get(l)).func_78785_a(p_78785_1_);
+                        }
+                    }
+
+                    if (flag)
+                    {
+                        GlStateManager.func_179152_a(1.0F / this.scaleX, 1.0F / this.scaleY, 1.0F / this.scaleZ);
+                    }
+                }
+                else
+                {
+                    GlStateManager.func_179109_b(this.field_78800_c * p_78785_1_, this.field_78797_d * p_78785_1_, this.field_78798_e * p_78785_1_);
+
+                    if (flag)
+                    {
+                        GlStateManager.func_179152_a(this.scaleX, this.scaleY, this.scaleZ);
+                    }
+
+                    GlStateManager.func_179148_o(this.field_78811_r);
+
+                    if (this.field_78805_m != null)
+                    {
+                        for (int k = 0; k < this.field_78805_m.size(); ++k)
+                        {
+                            ((ModelRenderer)this.field_78805_m.get(k)).func_78785_a(p_78785_1_);
+                        }
+                    }
+
+                    if (flag)
+                    {
+                        GlStateManager.func_179152_a(1.0F / this.scaleX, 1.0F / this.scaleY, 1.0F / this.scaleZ);
+                    }
+
+                    GlStateManager.func_179109_b(-this.field_78800_c * p_78785_1_, -this.field_78797_d * p_78785_1_, -this.field_78798_e * p_78785_1_);
+                }
+            }
+            else
+            {
+                GlStateManager.func_179094_E();
+                GlStateManager.func_179109_b(this.field_78800_c * p_78785_1_, this.field_78797_d * p_78785_1_, this.field_78798_e * p_78785_1_);
+
+                if (this.field_78808_h != 0.0F)
+                {
+                    GlStateManager.func_179114_b(this.field_78808_h * (180F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
+                }
+
+                if (this.field_78796_g != 0.0F)
+                {
+                    GlStateManager.func_179114_b(this.field_78796_g * (180F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
+                }
+
+                if (this.field_78795_f != 0.0F)
+                {
+                    GlStateManager.func_179114_b(this.field_78795_f * (180F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
+                }
+
+                if (flag)
+                {
+                    GlStateManager.func_179152_a(this.scaleX, this.scaleY, this.scaleZ);
+                }
+
+                GlStateManager.func_179148_o(this.field_78811_r);
+
+                if (this.field_78805_m != null)
+                {
+                    for (int j = 0; j < this.field_78805_m.size(); ++j)
+                    {
+                        ((ModelRenderer)this.field_78805_m.get(j)).func_78785_a(p_78785_1_);
+                    }
+                }
+
+                GlStateManager.func_179121_F();
+            }
+
+            GlStateManager.func_179109_b(-this.field_82906_o, -this.field_82908_p, -this.field_82907_q);
+
+            if (i != 0)
+            {
+                GlStateManager.func_179144_i(i);
+            }
+        }
+    }
+
+    @SideOnly(Side.CLIENT)
+    public void renderWithRotationO(float scale)
     {
         if (!this.field_78807_k)
         {
@@ -197,11 +353,11 @@
             {
                 if (!this.field_78812_q)
                 {
-                    this.func_78788_d(p_78791_1_);
+                    this.func_78788_d(scale);
                 }
 
                 GlStateManager.func_179094_E();
-                GlStateManager.func_179109_b(this.field_78800_c * p_78791_1_, this.field_78797_d * p_78791_1_, this.field_78798_e * p_78791_1_);
+                GlStateManager.func_179109_b(this.field_78800_c * scale, this.field_78797_d * scale, this.field_78798_e * scale);
 
                 if (this.field_78796_g != 0.0F)
                 {
@@ -223,7 +379,77 @@
             }
         }
     }
+    public void func_78791_b(float p_78791_1_)
+    {
+        if (!this.field_78807_k && this.field_78806_j)
+        {
+            if (!this.field_78812_q)
+            {
+                this.func_78788_d(p_78791_1_);
+            }
 
+            int i = 0;
+
+            if (this.textureLocation != null && !this.renderGlobal.renderOverlayDamaged)
+            {
+                if (this.renderGlobal.renderOverlayEyes)
+                {
+                    return;
+                }
+
+                i = GlStateManager.getBoundTexture();
+                Config.getTextureManager().func_110577_a(this.textureLocation);
+            }
+
+            if (this.modelUpdater != null)
+            {
+                this.modelUpdater.update();
+            }
+
+            boolean flag = this.scaleX != 1.0F || this.scaleY != 1.0F || this.scaleZ != 1.0F;
+            GlStateManager.func_179094_E();
+            GlStateManager.func_179109_b(this.field_78800_c * p_78791_1_, this.field_78797_d * p_78791_1_, this.field_78798_e * p_78791_1_);
+
+            if (this.field_78796_g != 0.0F)
+            {
+                GlStateManager.func_179114_b(this.field_78796_g * (180F / (float)Math.PI), 0.0F, 1.0F, 0.0F);
+            }
+
+            if (this.field_78795_f != 0.0F)
+            {
+                GlStateManager.func_179114_b(this.field_78795_f * (180F / (float)Math.PI), 1.0F, 0.0F, 0.0F);
+            }
+
+            if (this.field_78808_h != 0.0F)
+            {
+                GlStateManager.func_179114_b(this.field_78808_h * (180F / (float)Math.PI), 0.0F, 0.0F, 1.0F);
+            }
+
+            if (flag)
+            {
+                GlStateManager.func_179152_a(this.scaleX, this.scaleY, this.scaleZ);
+            }
+
+            GlStateManager.func_179148_o(this.field_78811_r);
+
+            if (this.field_78805_m != null)
+            {
+                for (int j = 0; j < this.field_78805_m.size(); ++j)
+                {
+                    ((ModelRenderer)this.field_78805_m.get(j)).func_78785_a(p_78791_1_);
+                }
+            }
+
+            GlStateManager.func_179121_F();
+
+            if (i != 0)
+            {
+                GlStateManager.func_179144_i(i);
+            }
+        }
+    }
+
+    @SideOnly(Side.CLIENT)
     public void func_78794_c(float p_78794_1_)
     {
         if (!this.field_78807_k)
@@ -265,7 +491,8 @@
         }
     }
 
-    private void func_78788_d(float p_78788_1_)
+    @SideOnly(Side.CLIENT)
+    private void compileDisplayListO(float scale)
     {
         this.field_78811_r = GLAllocation.func_74526_a(1);
         GlStateManager.func_187423_f(this.field_78811_r, 4864);
@@ -273,9 +500,36 @@
 
         for (int i = 0; i < this.field_78804_l.size(); ++i)
         {
+            ((ModelBox)this.field_78804_l.get(i)).func_178780_a(bufferbuilder, scale);
+        }
+
+        GlStateManager.func_187415_K();
+        this.field_78812_q = true;
+    }
+
+    @SideOnly(Side.CLIENT)
+    private void func_78788_d(float p_78788_1_)
+    {
+        if (this.field_78811_r == 0)
+        {
+            this.savedScale = p_78788_1_;
+            this.field_78811_r = GLAllocation.func_74526_a(1);
+        }
+
+        GlStateManager.func_187423_f(this.field_78811_r, 4864);
+        BufferBuilder bufferbuilder = Tessellator.func_178181_a().func_178180_c();
+
+        for (int i = 0; i < this.field_78804_l.size(); ++i)
+        {
             ((ModelBox)this.field_78804_l.get(i)).func_178780_a(bufferbuilder, p_78788_1_);
         }
 
+        for (int j = 0; j < this.spriteList.size(); ++j)
+        {
+            ModelSprite modelsprite = (ModelSprite)this.spriteList.get(j);
+            modelsprite.render(Tessellator.func_178181_a(), p_78788_1_);
+        }
+
         GlStateManager.func_187415_K();
         this.field_78812_q = true;
     }
@@ -286,4 +540,126 @@
         this.field_78799_b = (float)p_78787_2_;
         return this;
     }
+    
+    //op add
+    public void addSprite(float p_addSprite_1_, float p_addSprite_2_, float p_addSprite_3_, int p_addSprite_4_, int p_addSprite_5_, int p_addSprite_6_, float p_addSprite_7_)
+    {
+        this.spriteList.add(new ModelSprite(this, this.field_78803_o, this.field_78813_p, p_addSprite_1_, p_addSprite_2_, p_addSprite_3_, p_addSprite_4_, p_addSprite_5_, p_addSprite_6_, p_addSprite_7_));
+    }
+
+    public boolean getCompiled()
+    {
+        return this.field_78812_q;
+    }
+
+    public int getDisplayList()
+    {
+        return this.field_78811_r;
+    }
+
+    public void resetDisplayList()
+    {
+        if (this.field_78812_q)
+        {
+            this.field_78812_q = false;
+            this.func_78788_d(this.savedScale);
+        }
+    }
+
+    public ResourceLocation getTextureLocation()
+    {
+        return this.textureLocation;
+    }
+
+    public void setTextureLocation(ResourceLocation p_setTextureLocation_1_)
+    {
+        this.textureLocation = p_setTextureLocation_1_;
+    }
+
+    public String getId()
+    {
+        return this.id;
+    }
+
+    public void setId(String p_setId_1_)
+    {
+        this.id = p_setId_1_;
+    }
+
+    public void addBox(int[][] p_addBox_1_, float p_addBox_2_, float p_addBox_3_, float p_addBox_4_, float p_addBox_5_, float p_addBox_6_, float p_addBox_7_, float p_addBox_8_)
+    {
+        this.field_78804_l.add(new ModelBox(this, p_addBox_1_, p_addBox_2_, p_addBox_3_, p_addBox_4_, p_addBox_5_, p_addBox_6_, p_addBox_7_, p_addBox_8_, this.field_78809_i));
+    }
+
+    public ModelRenderer getChild(String p_getChild_1_)
+    {
+        if (p_getChild_1_ == null)
+        {
+            return null;
+        }
+        else
+        {
+            if (this.field_78805_m != null)
+            {
+                for (int i = 0; i < this.field_78805_m.size(); ++i)
+                {
+                    ModelRenderer modelrenderer = this.field_78805_m.get(i);
+
+                    if (p_getChild_1_.equals(modelrenderer.getId()))
+                    {
+                        return modelrenderer;
+                    }
+                }
+            }
+
+            return null;
+        }
+    }
+
+    public ModelRenderer getChildDeep(String p_getChildDeep_1_)
+    {
+        if (p_getChildDeep_1_ == null)
+        {
+            return null;
+        }
+        else
+        {
+            ModelRenderer modelrenderer = this.getChild(p_getChildDeep_1_);
+
+            if (modelrenderer != null)
+            {
+                return modelrenderer;
+            }
+            else
+            {
+                if (this.field_78805_m != null)
+                {
+                    for (int i = 0; i < this.field_78805_m.size(); ++i)
+                    {
+                        ModelRenderer modelrenderer1 = this.field_78805_m.get(i);
+                        ModelRenderer modelrenderer2 = modelrenderer1.getChildDeep(p_getChildDeep_1_);
+
+                        if (modelrenderer2 != null)
+                        {
+                            return modelrenderer2;
+                        }
+                    }
+                }
+
+                return null;
+            }
+        }
+    }
+
+    public void setModelUpdater(ModelUpdater p_setModelUpdater_1_)
+    {
+        this.modelUpdater = p_setModelUpdater_1_;
+    }
+
+    public String toString()
+    {
+        StringBuffer stringbuffer = new StringBuffer();
+        stringbuffer.append("id: " + this.id + ", boxes: " + (this.field_78804_l != null ? this.field_78804_l.size() : null) + ", submodels: " + (this.field_78805_m != null ? this.field_78805_m.size() : null));
+        return stringbuffer.toString();
+    }
 }
