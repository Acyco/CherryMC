--- ../src-base/minecraft/net/minecraft/client/renderer/BlockModelRenderer.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/BlockModelRenderer.java
@@ -7,12 +7,14 @@
 import net.minecraft.block.state.IBlockState;
 import net.minecraft.client.Minecraft;
 import net.minecraft.client.renderer.block.model.BakedQuad;
+import net.minecraft.client.renderer.block.model.FaceBakery;
 import net.minecraft.client.renderer.block.model.IBakedModel;
 import net.minecraft.client.renderer.color.BlockColors;
 import net.minecraft.client.renderer.texture.TextureUtil;
 import net.minecraft.client.renderer.vertex.DefaultVertexFormats;
 import net.minecraft.crash.CrashReport;
 import net.minecraft.crash.CrashReportCategory;
+import net.minecraft.util.BlockRenderLayer;
 import net.minecraft.util.EnumFacing;
 import net.minecraft.util.ReportedException;
 import net.minecraft.util.math.BlockPos;
@@ -20,17 +22,29 @@
 import net.minecraft.util.math.Vec3d;
 import net.minecraft.util.math.Vec3i;
 import net.minecraft.world.IBlockAccess;
+import net.minecraftforge.common.ForgeModContainer;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import optifine.BetterSnow;
+import optifine.BlockModelCustomizer;
+import optifine.Config;
+import optifine.CustomColors;
+import optifine.ListQuadsOverlay;
+import optifine.ReflectorForge;
+import optifine.RenderEnv;
+import shadersmod.client.SVertexBuilder;
 
 @SideOnly(Side.CLIENT)
 public class BlockModelRenderer
 {
     private final BlockColors field_187499_a;
+    private static float aoLightValueOpaque = 0.2F;
+    private static final BlockRenderLayer[] OVERLAY_LAYERS = new BlockRenderLayer[] {BlockRenderLayer.CUTOUT, BlockRenderLayer.CUTOUT_MIPPED, BlockRenderLayer.TRANSLUCENT};
 
     public BlockModelRenderer(BlockColors p_i46575_1_)
     {
         this.field_187499_a = p_i46575_1_;
+        ForgeModContainer.forgeLightPipelineEnabled = false;
     }
 
     public boolean func_178267_a(IBlockAccess p_178267_1_, IBakedModel p_178267_2_, IBlockState p_178267_3_, BlockPos p_178267_4_, BufferBuilder p_178267_5_, boolean p_178267_6_)
@@ -38,25 +52,68 @@
         return this.func_187493_a(p_178267_1_, p_178267_2_, p_178267_3_, p_178267_4_, p_178267_5_, p_178267_6_, MathHelper.func_180186_a(p_178267_4_));
     }
 
-    public boolean func_187493_a(IBlockAccess p_187493_1_, IBakedModel p_187493_2_, IBlockState p_187493_3_, BlockPos p_187493_4_, BufferBuilder p_187493_5_, boolean p_187493_6_, long p_187493_7_)
+    public boolean renderModelO(IBlockAccess worldIn, IBakedModel modelIn, IBlockState stateIn, BlockPos posIn, BufferBuilder buffer, boolean checkSides, long rand)
     {
-        boolean flag = Minecraft.func_71379_u() && p_187493_3_.func_185906_d() == 0 && p_187493_2_.func_177555_b();
+        boolean flag = Minecraft.func_71379_u() && stateIn.getLightValue(worldIn, posIn) == 0 && modelIn.isAmbientOcclusion(stateIn);
 
         try
         {
-            return flag ? this.func_187498_b(p_187493_1_, p_187493_2_, p_187493_3_, p_187493_4_, p_187493_5_, p_187493_6_, p_187493_7_) : this.func_187497_c(p_187493_1_, p_187493_2_, p_187493_3_, p_187493_4_, p_187493_5_, p_187493_6_, p_187493_7_);
+            return flag ? this.func_187498_b(worldIn, modelIn, stateIn, posIn, buffer, checkSides, rand) : this.func_187497_c(worldIn, modelIn, stateIn, posIn, buffer, checkSides, rand);
         }
         catch (Throwable throwable)
         {
             CrashReport crashreport = CrashReport.func_85055_a(throwable, "Tesselating block model");
             CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block model being tesselated");
+            CrashReportCategory.func_175750_a(crashreportcategory, posIn, stateIn);
+            crashreportcategory.func_71507_a("Using AO", Boolean.valueOf(flag));
+            throw new ReportedException(crashreport);
+        }
+    }
+
+    public boolean func_187493_a(IBlockAccess p_187493_1_, IBakedModel p_187493_2_, IBlockState p_187493_3_, BlockPos p_187493_4_, BufferBuilder p_187493_5_, boolean p_187493_6_, long p_187493_7_)
+    {
+        boolean flag = Minecraft.func_71379_u() && ReflectorForge.getLightValue(p_187493_3_, p_187493_1_, p_187493_4_) == 0 && p_187493_2_.func_177555_b();
+
+        try
+        {
+            if (Config.isShaders())
+            {
+                SVertexBuilder.pushEntity(p_187493_3_, p_187493_4_, p_187493_1_, p_187493_5_);
+            }
+
+            if (!Config.isAlternateBlocks())
+            {
+                p_187493_7_ = 0L;
+            }
+
+            RenderEnv renderenv = p_187493_5_.getRenderEnv(p_187493_1_, p_187493_3_, p_187493_4_);
+            p_187493_2_ = BlockModelCustomizer.getRenderModel(p_187493_2_, p_187493_3_, renderenv);
+            boolean flag1 = flag ? this.func_187498_b(p_187493_1_, p_187493_2_, p_187493_3_, p_187493_4_, p_187493_5_, p_187493_6_, p_187493_7_) : this.func_187497_c(p_187493_1_, p_187493_2_, p_187493_3_, p_187493_4_, p_187493_5_, p_187493_6_, p_187493_7_);
+
+            if (flag1)
+            {
+                this.renderOverlayModels(p_187493_1_, p_187493_2_, p_187493_3_, p_187493_4_, p_187493_5_, p_187493_6_, p_187493_7_, renderenv, flag);
+            }
+
+            if (Config.isShaders())
+            {
+                SVertexBuilder.popEntity(p_187493_5_);
+            }
+
+            return flag1;
+        }
+        catch (Throwable throwable1)
+        {
+            CrashReport crashreport = CrashReport.func_85055_a(throwable1, "Tesselating block model");
+            CrashReportCategory crashreportcategory = crashreport.func_85058_a("Block model being tesselated");
             CrashReportCategory.func_175750_a(crashreportcategory, p_187493_4_, p_187493_3_);
             crashreportcategory.func_71507_a("Using AO", Boolean.valueOf(flag));
             throw new ReportedException(crashreport);
         }
     }
+    
 
-    public boolean func_187498_b(IBlockAccess p_187498_1_, IBakedModel p_187498_2_, IBlockState p_187498_3_, BlockPos p_187498_4_, BufferBuilder p_187498_5_, boolean p_187498_6_, long p_187498_7_)
+    public boolean renderModelSmoothO(IBlockAccess worldIn, IBakedModel modelIn, IBlockState stateIn, BlockPos posIn, BufferBuilder buffer, boolean checkSides, long rand)
     {
         boolean flag = false;
         float[] afloat = new float[EnumFacing.values().length * 2];
@@ -65,11 +122,39 @@
 
         for (EnumFacing enumfacing : EnumFacing.values())
         {
+            List<BakedQuad> list = modelIn.func_188616_a(stateIn, enumfacing, rand);
+
+            if (!list.isEmpty() && (!checkSides || stateIn.func_185894_c(worldIn, posIn, enumfacing)))
+            {
+                this.renderQuadsSmoothO(worldIn, stateIn, posIn, buffer, list, afloat, bitset, blockmodelrenderer$ambientocclusionface);
+                flag = true;
+            }
+        }
+
+        List<BakedQuad> list1 = modelIn.func_188616_a(stateIn, (EnumFacing)null, rand);
+
+        if (!list1.isEmpty())
+        {
+            this.renderQuadsSmoothO(worldIn, stateIn, posIn, buffer, list1, afloat, bitset, blockmodelrenderer$ambientocclusionface);
+            flag = true;
+        }
+
+        return flag;
+    }
+
+    public boolean func_187498_b(IBlockAccess p_187498_1_, IBakedModel p_187498_2_, IBlockState p_187498_3_, BlockPos p_187498_4_, BufferBuilder p_187498_5_, boolean p_187498_6_, long p_187498_7_)
+    {
+        boolean flag = false;
+        RenderEnv renderenv = p_187498_5_.getRenderEnv(p_187498_1_, p_187498_3_, p_187498_4_);
+
+        for (EnumFacing enumfacing : EnumFacing.field_82609_l)
+        {
             List<BakedQuad> list = p_187498_2_.func_188616_a(p_187498_3_, enumfacing, p_187498_7_);
 
             if (!list.isEmpty() && (!p_187498_6_ || p_187498_3_.func_185894_c(p_187498_1_, p_187498_4_, enumfacing)))
             {
-                this.func_187492_a(p_187498_1_, p_187498_3_, p_187498_4_, p_187498_5_, list, afloat, bitset, blockmodelrenderer$ambientocclusionface);
+                list = BlockModelCustomizer.getRenderQuads(list, p_187498_1_, p_187498_3_, p_187498_4_, enumfacing, p_187498_7_, renderenv);
+                this.renderQuadsSmooth(p_187498_1_, p_187498_3_, p_187498_4_, p_187498_5_, list, renderenv);
                 flag = true;
             }
         }
@@ -78,26 +163,56 @@
 
         if (!list1.isEmpty())
         {
-            this.func_187492_a(p_187498_1_, p_187498_3_, p_187498_4_, p_187498_5_, list1, afloat, bitset, blockmodelrenderer$ambientocclusionface);
+            list1 = BlockModelCustomizer.getRenderQuads(list1, p_187498_1_, p_187498_3_, p_187498_4_, (EnumFacing)null, p_187498_7_, renderenv);
+            this.renderQuadsSmooth(p_187498_1_, p_187498_3_, p_187498_4_, p_187498_5_, list1, renderenv);
             flag = true;
         }
 
         return flag;
     }
 
-    public boolean func_187497_c(IBlockAccess p_187497_1_, IBakedModel p_187497_2_, IBlockState p_187497_3_, BlockPos p_187497_4_, BufferBuilder p_187497_5_, boolean p_187497_6_, long p_187497_7_)
+    public boolean renderModelFlatO(IBlockAccess worldIn, IBakedModel modelIn, IBlockState stateIn, BlockPos posIn, BufferBuilder buffer, boolean checkSides, long rand)
     {
         boolean flag = false;
         BitSet bitset = new BitSet(3);
 
         for (EnumFacing enumfacing : EnumFacing.values())
         {
+            List<BakedQuad> list = modelIn.func_188616_a(stateIn, enumfacing, rand);
+
+            if (!list.isEmpty() && (!checkSides || stateIn.func_185894_c(worldIn, posIn, enumfacing)))
+            {
+                int i = stateIn.func_185889_a(worldIn, posIn.func_177972_a(enumfacing));
+                this.renderQuadsFlat0(worldIn, stateIn, posIn, i, false, buffer, list, bitset);
+                flag = true;
+            }
+        }
+
+        List<BakedQuad> list1 = modelIn.func_188616_a(stateIn, (EnumFacing)null, rand);
+
+        if (!list1.isEmpty())
+        {
+            this.renderQuadsFlat0(worldIn, stateIn, posIn, -1, true, buffer, list1, bitset);
+            flag = true;
+        }
+
+        return flag;
+    }
+
+    public boolean func_187497_c(IBlockAccess p_187497_1_, IBakedModel p_187497_2_, IBlockState p_187497_3_, BlockPos p_187497_4_, BufferBuilder p_187497_5_, boolean p_187497_6_, long p_187497_7_)
+    {
+        boolean flag = false;
+        RenderEnv renderenv = p_187497_5_.getRenderEnv(p_187497_1_, p_187497_3_, p_187497_4_);
+
+        for (EnumFacing enumfacing : EnumFacing.field_82609_l)
+        {
             List<BakedQuad> list = p_187497_2_.func_188616_a(p_187497_3_, enumfacing, p_187497_7_);
 
             if (!list.isEmpty() && (!p_187497_6_ || p_187497_3_.func_185894_c(p_187497_1_, p_187497_4_, enumfacing)))
             {
                 int i = p_187497_3_.func_185889_a(p_187497_1_, p_187497_4_.func_177972_a(enumfacing));
-                this.func_187496_a(p_187497_1_, p_187497_3_, p_187497_4_, i, false, p_187497_5_, list, bitset);
+                list = BlockModelCustomizer.getRenderQuads(list, p_187497_1_, p_187497_3_, p_187497_4_, enumfacing, p_187497_7_, renderenv);
+                this.renderQuadsFlat(p_187497_1_, p_187497_3_, p_187497_4_, i, false, p_187497_5_, list, renderenv);
                 flag = true;
             }
         }
@@ -106,32 +221,40 @@
 
         if (!list1.isEmpty())
         {
-            this.func_187496_a(p_187497_1_, p_187497_3_, p_187497_4_, -1, true, p_187497_5_, list1, bitset);
+            list1 = BlockModelCustomizer.getRenderQuads(list1, p_187497_1_, p_187497_3_, p_187497_4_, (EnumFacing)null, p_187497_7_, renderenv);
+            this.renderQuadsFlat(p_187497_1_, p_187497_3_, p_187497_4_, -1, true, p_187497_5_, list1, renderenv);
             flag = true;
         }
 
         return flag;
     }
-
-    private void func_187492_a(IBlockAccess p_187492_1_, IBlockState p_187492_2_, BlockPos p_187492_3_, BufferBuilder p_187492_4_, List<BakedQuad> p_187492_5_, float[] p_187492_6_, BitSet p_187492_7_, BlockModelRenderer.AmbientOcclusionFace p_187492_8_)
+    
+    private void renderQuadsSmoothO(IBlockAccess blockAccessIn, IBlockState stateIn, BlockPos posIn, BufferBuilder buffer, List<BakedQuad> list, float[] quadBounds, BitSet bitSet, BlockModelRenderer.AmbientOcclusionFace aoFace)
     {
-        Vec3d vec3d = p_187492_2_.func_191059_e(p_187492_1_, p_187492_3_);
-        double d0 = (double)p_187492_3_.func_177958_n() + vec3d.field_72450_a;
-        double d1 = (double)p_187492_3_.func_177956_o() + vec3d.field_72448_b;
-        double d2 = (double)p_187492_3_.func_177952_p() + vec3d.field_72449_c;
+        Vec3d vec3d = stateIn.func_191059_e(blockAccessIn, posIn);
+        double d0 = (double)posIn.func_177958_n() + vec3d.field_72450_a;
+        double d1 = (double)posIn.func_177956_o() + vec3d.field_72448_b;
+        double d2 = (double)posIn.func_177952_p() + vec3d.field_72449_c;
         int i = 0;
 
-        for (int j = p_187492_5_.size(); i < j; ++i)
+        for (int j = list.size(); i < j; ++i)
         {
-            BakedQuad bakedquad = p_187492_5_.get(i);
-            this.func_187494_a(p_187492_2_, bakedquad.func_178209_a(), bakedquad.func_178210_d(), p_187492_6_, p_187492_7_);
-            p_187492_8_.func_187491_a(p_187492_1_, p_187492_2_, p_187492_3_, bakedquad.func_178210_d(), p_187492_6_, p_187492_7_);
-            p_187492_4_.func_178981_a(bakedquad.func_178209_a());
-            p_187492_4_.func_178962_a(p_187492_8_.field_178207_c[0], p_187492_8_.field_178207_c[1], p_187492_8_.field_178207_c[2], p_187492_8_.field_178207_c[3]);
-
+            BakedQuad bakedquad = list.get(i);
+            this.func_187494_a(stateIn, bakedquad.func_178209_a(), bakedquad.func_178210_d(), quadBounds, bitSet);
+            aoFace.func_187491_a(blockAccessIn, stateIn, posIn, bakedquad.func_178210_d(), quadBounds, bitSet);
+            buffer.func_178981_a(bakedquad.func_178209_a());
+            buffer.func_178962_a(aoFace.field_178207_c[0], aoFace.field_178207_c[1], aoFace.field_178207_c[2], aoFace.field_178207_c[3]);
+            if(bakedquad.shouldApplyDiffuseLighting())
+            {
+                float diffuse = net.minecraftforge.client.model.pipeline.LightUtil.diffuseLight(bakedquad.func_178210_d());
+                aoFace.field_178206_b[0] *= diffuse;
+                aoFace.field_178206_b[1] *= diffuse;
+                aoFace.field_178206_b[2] *= diffuse;
+                aoFace.field_178206_b[3] *= diffuse;
+            }
             if (bakedquad.func_178212_b())
             {
-                int k = this.field_187499_a.func_186724_a(p_187492_2_, p_187492_1_, p_187492_3_, bakedquad.func_178211_c());
+                int k = this.field_187499_a.func_186724_a(stateIn, blockAccessIn, posIn, bakedquad.func_178211_c());
 
                 if (EntityRenderer.field_78517_a)
                 {
@@ -141,23 +264,101 @@
                 float f = (float)(k >> 16 & 255) / 255.0F;
                 float f1 = (float)(k >> 8 & 255) / 255.0F;
                 float f2 = (float)(k & 255) / 255.0F;
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[0] * f, p_187492_8_.field_178206_b[0] * f1, p_187492_8_.field_178206_b[0] * f2, 4);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[1] * f, p_187492_8_.field_178206_b[1] * f1, p_187492_8_.field_178206_b[1] * f2, 3);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[2] * f, p_187492_8_.field_178206_b[2] * f1, p_187492_8_.field_178206_b[2] * f2, 2);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[3] * f, p_187492_8_.field_178206_b[3] * f1, p_187492_8_.field_178206_b[3] * f2, 1);
+                buffer.func_178978_a(aoFace.field_178206_b[0] * f, aoFace.field_178206_b[0] * f1, aoFace.field_178206_b[0] * f2, 4);
+                buffer.func_178978_a(aoFace.field_178206_b[1] * f, aoFace.field_178206_b[1] * f1, aoFace.field_178206_b[1] * f2, 3);
+                buffer.func_178978_a(aoFace.field_178206_b[2] * f, aoFace.field_178206_b[2] * f1, aoFace.field_178206_b[2] * f2, 2);
+                buffer.func_178978_a(aoFace.field_178206_b[3] * f, aoFace.field_178206_b[3] * f1, aoFace.field_178206_b[3] * f2, 1);
             }
             else
             {
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[0], p_187492_8_.field_178206_b[0], p_187492_8_.field_178206_b[0], 4);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[1], p_187492_8_.field_178206_b[1], p_187492_8_.field_178206_b[1], 3);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[2], p_187492_8_.field_178206_b[2], p_187492_8_.field_178206_b[2], 2);
-                p_187492_4_.func_178978_a(p_187492_8_.field_178206_b[3], p_187492_8_.field_178206_b[3], p_187492_8_.field_178206_b[3], 1);
+                buffer.func_178978_a(aoFace.field_178206_b[0], aoFace.field_178206_b[0], aoFace.field_178206_b[0], 4);
+                buffer.func_178978_a(aoFace.field_178206_b[1], aoFace.field_178206_b[1], aoFace.field_178206_b[1], 3);
+                buffer.func_178978_a(aoFace.field_178206_b[2], aoFace.field_178206_b[2], aoFace.field_178206_b[2], 2);
+                buffer.func_178978_a(aoFace.field_178206_b[3], aoFace.field_178206_b[3], aoFace.field_178206_b[3], 1);
             }
 
-            p_187492_4_.func_178987_a(d0, d1, d2);
+            buffer.func_178987_a(d0, d1, d2);
         }
     }
 
+    private void renderQuadsSmooth(IBlockAccess p_renderQuadsSmooth_1_, IBlockState p_renderQuadsSmooth_2_, BlockPos p_renderQuadsSmooth_3_, BufferBuilder p_renderQuadsSmooth_4_, List<BakedQuad> p_renderQuadsSmooth_5_, RenderEnv p_renderQuadsSmooth_6_)
+    {
+        float[] afloat = p_renderQuadsSmooth_6_.getQuadBounds();
+        BitSet bitset = p_renderQuadsSmooth_6_.getBoundsFlags();
+        AmbientOcclusionFace blockmodelrenderer$ambientocclusionface = p_renderQuadsSmooth_6_.getAoFace();
+        Vec3d vec3d = p_renderQuadsSmooth_2_.func_191059_e(p_renderQuadsSmooth_1_, p_renderQuadsSmooth_3_);
+        double d0 = (double)p_renderQuadsSmooth_3_.func_177958_n() + vec3d.field_72450_a;
+        double d1 = (double)p_renderQuadsSmooth_3_.func_177956_o() + vec3d.field_72448_b;
+        double d2 = (double)p_renderQuadsSmooth_3_.func_177952_p() + vec3d.field_72449_c;
+        int i = 0;
+
+        for (int j = p_renderQuadsSmooth_5_.size(); i < j; ++i)
+        {
+            BakedQuad bakedquad = p_renderQuadsSmooth_5_.get(i);
+            this.func_187494_a(p_renderQuadsSmooth_2_, bakedquad.func_178209_a(), bakedquad.func_178210_d(), afloat, bitset);
+            blockmodelrenderer$ambientocclusionface.func_187491_a(p_renderQuadsSmooth_1_, p_renderQuadsSmooth_2_, p_renderQuadsSmooth_3_, bakedquad.func_178210_d(), afloat, bitset);
+
+            if (p_renderQuadsSmooth_4_.isMultiTexture())
+            {
+                p_renderQuadsSmooth_4_.func_178981_a(bakedquad.getVertexDataSingle());
+                p_renderQuadsSmooth_4_.putSprite(bakedquad.func_187508_a());
+            }
+            else
+            {
+                p_renderQuadsSmooth_4_.func_178981_a(bakedquad.func_178209_a());
+            }
+
+            p_renderQuadsSmooth_4_.func_178962_a(blockmodelrenderer$ambientocclusionface.field_178207_c[0], blockmodelrenderer$ambientocclusionface.field_178207_c[1], blockmodelrenderer$ambientocclusionface.field_178207_c[2], blockmodelrenderer$ambientocclusionface.field_178207_c[3]);
+
+            if (bakedquad.shouldApplyDiffuseLighting())
+            {
+                float f = FaceBakery.func_178412_b(bakedquad.func_178210_d());
+                float[] afloat1 = blockmodelrenderer$ambientocclusionface.field_178206_b;
+                afloat1[0] *= f;
+                afloat1 = blockmodelrenderer$ambientocclusionface.field_178206_b;
+                afloat1[1] *= f;
+                afloat1 = blockmodelrenderer$ambientocclusionface.field_178206_b;
+                afloat1[2] *= f;
+                afloat1 = blockmodelrenderer$ambientocclusionface.field_178206_b;
+                afloat1[3] *= f;
+            }
+
+            int l = CustomColors.getColorMultiplier(bakedquad, p_renderQuadsSmooth_2_, p_renderQuadsSmooth_1_, p_renderQuadsSmooth_3_, p_renderQuadsSmooth_6_);
+
+            if (!bakedquad.func_178212_b() && l == -1)
+            {
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[0], blockmodelrenderer$ambientocclusionface.field_178206_b[0], blockmodelrenderer$ambientocclusionface.field_178206_b[0], 4);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[1], blockmodelrenderer$ambientocclusionface.field_178206_b[1], blockmodelrenderer$ambientocclusionface.field_178206_b[1], 3);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[2], blockmodelrenderer$ambientocclusionface.field_178206_b[2], blockmodelrenderer$ambientocclusionface.field_178206_b[2], 2);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[3], blockmodelrenderer$ambientocclusionface.field_178206_b[3], blockmodelrenderer$ambientocclusionface.field_178206_b[3], 1);
+            }
+            else
+            {
+                int k = l;
+
+                if (l == -1)
+                {
+                    k = this.field_187499_a.func_186724_a(p_renderQuadsSmooth_2_, p_renderQuadsSmooth_1_, p_renderQuadsSmooth_3_, bakedquad.func_178211_c());
+                }
+
+                if (EntityRenderer.field_78517_a)
+                {
+                    k = TextureUtil.func_177054_c(k);
+                }
+
+                float f1 = (float)(k >> 16 & 255) / 255.0F;
+                float f2 = (float)(k >> 8 & 255) / 255.0F;
+                float f3 = (float)(k & 255) / 255.0F;
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[0] * f1, blockmodelrenderer$ambientocclusionface.field_178206_b[0] * f2, blockmodelrenderer$ambientocclusionface.field_178206_b[0] * f3, 4);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[1] * f1, blockmodelrenderer$ambientocclusionface.field_178206_b[1] * f2, blockmodelrenderer$ambientocclusionface.field_178206_b[1] * f3, 3);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[2] * f1, blockmodelrenderer$ambientocclusionface.field_178206_b[2] * f2, blockmodelrenderer$ambientocclusionface.field_178206_b[2] * f3, 2);
+                p_renderQuadsSmooth_4_.func_178978_a(blockmodelrenderer$ambientocclusionface.field_178206_b[3] * f1, blockmodelrenderer$ambientocclusionface.field_178206_b[3] * f2, blockmodelrenderer$ambientocclusionface.field_178206_b[3] * f3, 1);
+            }
+
+            p_renderQuadsSmooth_4_.func_178987_a(d0, d1, d2);
+        }
+    }
+
     private void func_187494_a(IBlockState p_187494_1_, int[] p_187494_2_, EnumFacing p_187494_3_, @Nullable float[] p_187494_4_, BitSet p_187494_5_)
     {
         float f = 32.0F;
@@ -228,31 +429,34 @@
         }
     }
 
-    private void func_187496_a(IBlockAccess p_187496_1_, IBlockState p_187496_2_, BlockPos p_187496_3_, int p_187496_4_, boolean p_187496_5_, BufferBuilder p_187496_6_, List<BakedQuad> p_187496_7_, BitSet p_187496_8_)
+    private void renderQuadsFlat0(IBlockAccess blockAccessIn, IBlockState stateIn, BlockPos posIn, int brightnessIn, boolean ownBrightness, BufferBuilder buffer, List<BakedQuad> list, BitSet bitSet)
     {
-        Vec3d vec3d = p_187496_2_.func_191059_e(p_187496_1_, p_187496_3_);
-        double d0 = (double)p_187496_3_.func_177958_n() + vec3d.field_72450_a;
-        double d1 = (double)p_187496_3_.func_177956_o() + vec3d.field_72448_b;
-        double d2 = (double)p_187496_3_.func_177952_p() + vec3d.field_72449_c;
+        //op add
+        //BitSet bitset = bitSet.getBoundsFlags();
+        
+        Vec3d vec3d = stateIn.func_191059_e(blockAccessIn, posIn);
+        double d0 = (double)posIn.func_177958_n() + vec3d.field_72450_a;
+        double d1 = (double)posIn.func_177956_o() + vec3d.field_72448_b;
+        double d2 = (double)posIn.func_177952_p() + vec3d.field_72449_c;
         int i = 0;
 
-        for (int j = p_187496_7_.size(); i < j; ++i)
+        for (int j = list.size(); i < j; ++i)
         {
-            BakedQuad bakedquad = p_187496_7_.get(i);
+            BakedQuad bakedquad = list.get(i);
 
-            if (p_187496_5_)
+            if (ownBrightness)
             {
-                this.func_187494_a(p_187496_2_, bakedquad.func_178209_a(), bakedquad.func_178210_d(), (float[])null, p_187496_8_);
-                BlockPos blockpos = p_187496_8_.get(0) ? p_187496_3_.func_177972_a(bakedquad.func_178210_d()) : p_187496_3_;
-                p_187496_4_ = p_187496_2_.func_185889_a(p_187496_1_, blockpos);
+                this.func_187494_a(stateIn, bakedquad.func_178209_a(), bakedquad.func_178210_d(), (float[])null, bitSet);
+                BlockPos blockpos = bitSet.get(0) ? posIn.func_177972_a(bakedquad.func_178210_d()) : posIn;
+                brightnessIn = stateIn.func_185889_a(blockAccessIn, blockpos);
             }
 
-            p_187496_6_.func_178981_a(bakedquad.func_178209_a());
-            p_187496_6_.func_178962_a(p_187496_4_, p_187496_4_, p_187496_4_, p_187496_4_);
+            buffer.func_178981_a(bakedquad.func_178209_a());
+            buffer.func_178962_a(brightnessIn, brightnessIn, brightnessIn, brightnessIn);
 
             if (bakedquad.func_178212_b())
             {
-                int k = this.field_187499_a.func_186724_a(p_187496_2_, p_187496_1_, p_187496_3_, bakedquad.func_178211_c());
+                int k = this.field_187499_a.func_186724_a(stateIn, blockAccessIn, posIn, bakedquad.func_178211_c());
 
                 if (EntityRenderer.field_78517_a)
                 {
@@ -262,16 +466,111 @@
                 float f = (float)(k >> 16 & 255) / 255.0F;
                 float f1 = (float)(k >> 8 & 255) / 255.0F;
                 float f2 = (float)(k & 255) / 255.0F;
-                p_187496_6_.func_178978_a(f, f1, f2, 4);
-                p_187496_6_.func_178978_a(f, f1, f2, 3);
-                p_187496_6_.func_178978_a(f, f1, f2, 2);
-                p_187496_6_.func_178978_a(f, f1, f2, 1);
+                if(bakedquad.shouldApplyDiffuseLighting())
+                {
+                    float diffuse = net.minecraftforge.client.model.pipeline.LightUtil.diffuseLight(bakedquad.func_178210_d());
+                    f *= diffuse;
+                    f1 *= diffuse;
+                    f2 *= diffuse;
+                }
+                buffer.func_178978_a(f, f1, f2, 4);
+                buffer.func_178978_a(f, f1, f2, 3);
+                buffer.func_178978_a(f, f1, f2, 2);
+                buffer.func_178978_a(f, f1, f2, 1);
             }
+            else if(bakedquad.shouldApplyDiffuseLighting())
+            {
+                float diffuse = net.minecraftforge.client.model.pipeline.LightUtil.diffuseLight(bakedquad.func_178210_d());
+                buffer.func_178978_a(diffuse, diffuse, diffuse, 4);
+                buffer.func_178978_a(diffuse, diffuse, diffuse, 3);
+                buffer.func_178978_a(diffuse, diffuse, diffuse, 2);
+                buffer.func_178978_a(diffuse, diffuse, diffuse, 1);
+            }
 
-            p_187496_6_.func_178987_a(d0, d1, d2);
+            buffer.func_178987_a(d0, d1, d2);
         }
     }
 
+    private void renderQuadsFlat(IBlockAccess p_renderQuadsFlat_1_, IBlockState p_renderQuadsFlat_2_, BlockPos p_renderQuadsFlat_3_, int p_renderQuadsFlat_4_, boolean p_renderQuadsFlat_5_, BufferBuilder p_renderQuadsFlat_6_, List<BakedQuad> p_renderQuadsFlat_7_, RenderEnv p_renderQuadsFlat_8_)
+    {
+        BitSet bitset = p_renderQuadsFlat_8_.getBoundsFlags();
+        Vec3d vec3d = p_renderQuadsFlat_2_.func_191059_e(p_renderQuadsFlat_1_, p_renderQuadsFlat_3_);
+        double d0 = (double)p_renderQuadsFlat_3_.func_177958_n() + vec3d.field_72450_a;
+        double d1 = (double)p_renderQuadsFlat_3_.func_177956_o() + vec3d.field_72448_b;
+        double d2 = (double)p_renderQuadsFlat_3_.func_177952_p() + vec3d.field_72449_c;
+        int i = 0;
+
+        for (int j = p_renderQuadsFlat_7_.size(); i < j; ++i)
+        {
+            BakedQuad bakedquad = p_renderQuadsFlat_7_.get(i);
+
+            if (p_renderQuadsFlat_5_)
+            {
+                this.func_187494_a(p_renderQuadsFlat_2_, bakedquad.func_178209_a(), bakedquad.func_178210_d(), (float[])null, bitset);
+                BlockPos blockpos = bitset.get(0) ? p_renderQuadsFlat_3_.func_177972_a(bakedquad.func_178210_d()) : p_renderQuadsFlat_3_;
+                p_renderQuadsFlat_4_ = p_renderQuadsFlat_2_.func_185889_a(p_renderQuadsFlat_1_, blockpos);
+            }
+
+            if (p_renderQuadsFlat_6_.isMultiTexture())
+            {
+                p_renderQuadsFlat_6_.func_178981_a(bakedquad.getVertexDataSingle());
+                p_renderQuadsFlat_6_.putSprite(bakedquad.func_187508_a());
+            }
+            else
+            {
+                p_renderQuadsFlat_6_.func_178981_a(bakedquad.func_178209_a());
+            }
+
+            p_renderQuadsFlat_6_.func_178962_a(p_renderQuadsFlat_4_, p_renderQuadsFlat_4_, p_renderQuadsFlat_4_, p_renderQuadsFlat_4_);
+            int l = CustomColors.getColorMultiplier(bakedquad, p_renderQuadsFlat_2_, p_renderQuadsFlat_1_, p_renderQuadsFlat_3_, p_renderQuadsFlat_8_);
+
+            if (!bakedquad.func_178212_b() && l == -1)
+            {
+                if (bakedquad.shouldApplyDiffuseLighting())
+                {
+                    float f4 = FaceBakery.func_178412_b(bakedquad.func_178210_d());
+                    p_renderQuadsFlat_6_.func_178978_a(f4, f4, f4, 4);
+                    p_renderQuadsFlat_6_.func_178978_a(f4, f4, f4, 3);
+                    p_renderQuadsFlat_6_.func_178978_a(f4, f4, f4, 2);
+                    p_renderQuadsFlat_6_.func_178978_a(f4, f4, f4, 1);
+                }
+            }
+            else
+            {
+                int k = l;
+
+                if (l == -1)
+                {
+                    k = this.field_187499_a.func_186724_a(p_renderQuadsFlat_2_, p_renderQuadsFlat_1_, p_renderQuadsFlat_3_, bakedquad.func_178211_c());
+                }
+
+                if (EntityRenderer.field_78517_a)
+                {
+                    k = TextureUtil.func_177054_c(k);
+                }
+
+                float f = (float)(k >> 16 & 255) / 255.0F;
+                float f1 = (float)(k >> 8 & 255) / 255.0F;
+                float f2 = (float)(k & 255) / 255.0F;
+
+                if (bakedquad.shouldApplyDiffuseLighting())
+                {
+                    float f3 = FaceBakery.func_178412_b(bakedquad.func_178210_d());
+                    f *= f3;
+                    f1 *= f3;
+                    f2 *= f3;
+                }
+
+                p_renderQuadsFlat_6_.func_178978_a(f, f1, f2, 4);
+                p_renderQuadsFlat_6_.func_178978_a(f, f1, f2, 3);
+                p_renderQuadsFlat_6_.func_178978_a(f, f1, f2, 2);
+                p_renderQuadsFlat_6_.func_178978_a(f, f1, f2, 1);
+            }
+
+            p_renderQuadsFlat_6_.func_178987_a(d0, d1, d2);
+        }
+    }
+    
     public void func_178262_a(IBakedModel p_178262_1_, float p_178262_2_, float p_178262_3_, float p_178262_4_, float p_178262_5_)
     {
         this.func_187495_a((IBlockState)null, p_178262_1_, p_178262_2_, p_178262_3_, p_178262_4_, p_178262_5_);
@@ -336,9 +635,79 @@
             tessellator.func_78381_a();
         }
     }
+    
+    //op add
 
+    public static float fixAoLightValue(float p_fixAoLightValue_0_)
+    {
+        return p_fixAoLightValue_0_ == 0.2F ? aoLightValueOpaque : p_fixAoLightValue_0_;
+    }
+
+    public static void updateAoLightValue()
+    {
+        aoLightValueOpaque = 1.0F - Config.getAmbientOcclusionLevel() * 0.8F;
+    }
+
+    private void renderOverlayModels(IBlockAccess p_renderOverlayModels_1_, IBakedModel p_renderOverlayModels_2_, IBlockState p_renderOverlayModels_3_, BlockPos p_renderOverlayModels_4_, BufferBuilder p_renderOverlayModels_5_, boolean p_renderOverlayModels_6_, long p_renderOverlayModels_7_, RenderEnv p_renderOverlayModels_9_, boolean p_renderOverlayModels_10_)
+    {
+        if (p_renderOverlayModels_9_.isOverlaysRendered())
+        {
+            for (int i = 0; i < OVERLAY_LAYERS.length; ++i)
+            {
+                BlockRenderLayer blockrenderlayer = OVERLAY_LAYERS[i];
+                ListQuadsOverlay listquadsoverlay = p_renderOverlayModels_9_.getListQuadsOverlay(blockrenderlayer);
+
+                if (listquadsoverlay.size() > 0)
+                {
+                    RegionRenderCacheBuilder regionrendercachebuilder = p_renderOverlayModels_9_.getRegionRenderCacheBuilder();
+
+                    if (regionrendercachebuilder != null)
+                    {
+                        BufferBuilder bufferbuilder = regionrendercachebuilder.func_179038_a(blockrenderlayer);
+
+                        if (!bufferbuilder.isDrawing())
+                        {
+                            bufferbuilder.func_181668_a(7, DefaultVertexFormats.field_176600_a);
+                            bufferbuilder.func_178969_c(p_renderOverlayModels_5_.getXOffset(), p_renderOverlayModels_5_.getYOffset(), p_renderOverlayModels_5_.getZOffset());
+                        }
+
+                        for (int j = 0; j < listquadsoverlay.size(); ++j)
+                        {
+                            BakedQuad bakedquad = listquadsoverlay.getQuad(j);
+                            List<BakedQuad> list = listquadsoverlay.getListQuadsSingle(bakedquad);
+                            IBlockState iblockstate = listquadsoverlay.getBlockState(j);
+                            p_renderOverlayModels_9_.reset(p_renderOverlayModels_1_, iblockstate, p_renderOverlayModels_4_);
+
+                            if (p_renderOverlayModels_10_)
+                            {
+                                this.renderQuadsSmooth(p_renderOverlayModels_1_, iblockstate, p_renderOverlayModels_4_, bufferbuilder, list, p_renderOverlayModels_9_);
+                            }
+                            else
+                            {
+                                int k = iblockstate.func_185889_a(p_renderOverlayModels_1_, p_renderOverlayModels_4_.func_177972_a(bakedquad.func_178210_d()));
+                                this.renderQuadsFlat(p_renderOverlayModels_1_, iblockstate, p_renderOverlayModels_4_, k, false, bufferbuilder, list, p_renderOverlayModels_9_);
+                            }
+                        }
+                    }
+
+                    listquadsoverlay.clear();
+                }
+            }
+        }
+
+        if (Config.isBetterSnow() && !p_renderOverlayModels_9_.isBreakingAnimation() && BetterSnow.shouldRender(p_renderOverlayModels_1_, p_renderOverlayModels_3_, p_renderOverlayModels_4_))
+        {
+            IBakedModel ibakedmodel = BetterSnow.getModelSnowLayer();
+            IBlockState iblockstate1 = BetterSnow.getStateSnowLayer();
+            this.func_187493_a(p_renderOverlayModels_1_, ibakedmodel, iblockstate1, p_renderOverlayModels_4_, p_renderOverlayModels_5_, p_renderOverlayModels_6_, p_renderOverlayModels_7_);
+        }
+    }
+
+    //op end
+
     @SideOnly(Side.CLIENT)
-    class AmbientOcclusionFace
+    //cherry add public static
+    public static class AmbientOcclusionFace
     {
         private final float[] field_178206_b = new float[4];
         private final int[] field_178207_c = new int[4];
@@ -360,6 +729,12 @@
             float f1 = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos2).func_185892_j();
             float f2 = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos3).func_185892_j();
             float f3 = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos4).func_185892_j();
+            //op add
+            f = BlockModelRenderer.fixAoLightValue(f);
+            f1 = BlockModelRenderer.fixAoLightValue(f1);
+            f2 = BlockModelRenderer.fixAoLightValue(f2);
+            f3 = BlockModelRenderer.fixAoLightValue(f3);
+            //op end
             boolean flag = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos1).func_189536_c(p_187491_4_)).func_185895_e();
             boolean flag1 = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos2).func_189536_c(p_187491_4_)).func_185895_e();
             boolean flag2 = p_187491_1_.func_180495_p(blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos3).func_189536_c(p_187491_4_)).func_185895_e();
@@ -376,6 +751,7 @@
             {
                 BlockPos blockpos1 = blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos1).func_189536_c(blockmodelrenderer$enumneighborinfo.field_178276_g[2]);
                 f4 = p_187491_1_.func_180495_p(blockpos1).func_185892_j();
+                f4 = BlockModelRenderer.fixAoLightValue(f4); //op add
                 i1 = p_187491_2_.func_185889_a(p_187491_1_, blockpos1);
             }
 
@@ -391,6 +767,7 @@
             {
                 BlockPos blockpos2 = blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos1).func_189536_c(blockmodelrenderer$enumneighborinfo.field_178276_g[3]);
                 f5 = p_187491_1_.func_180495_p(blockpos2).func_185892_j();
+                f5 = BlockModelRenderer.fixAoLightValue(f5);//op add
                 j1 = p_187491_2_.func_185889_a(p_187491_1_, blockpos2);
             }
 
@@ -406,6 +783,7 @@
             {
                 BlockPos blockpos3 = blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos2).func_189536_c(blockmodelrenderer$enumneighborinfo.field_178276_g[2]);
                 f6 = p_187491_1_.func_180495_p(blockpos3).func_185892_j();
+                f6 = BlockModelRenderer.fixAoLightValue(f6); // op add
                 k1 = p_187491_2_.func_185889_a(p_187491_1_, blockpos3);
             }
 
@@ -421,6 +799,7 @@
             {
                 BlockPos blockpos4 = blockpos$pooledmutableblockpos.func_189533_g(blockpos$pooledmutableblockpos2).func_189536_c(blockmodelrenderer$enumneighborinfo.field_178276_g[3]);
                 f7 = p_187491_1_.func_180495_p(blockpos4).func_185892_j();
+                f7 = BlockModelRenderer.fixAoLightValue(f7); // op add
                 l1 = p_187491_2_.func_185889_a(p_187491_1_, blockpos4);
             }
 
@@ -432,6 +811,8 @@
             }
 
             float f8 = p_187491_6_.get(0) ? p_187491_1_.func_180495_p(blockpos).func_185892_j() : p_187491_1_.func_180495_p(p_187491_3_).func_185892_j();
+            f8 = BlockModelRenderer.fixAoLightValue(f8); // op add
+
             BlockModelRenderer.VertexTranslations blockmodelrenderer$vertextranslations = BlockModelRenderer.VertexTranslations.func_178184_a(p_187491_4_);
             blockpos$pooledmutableblockpos.func_185344_t();
             blockpos$pooledmutableblockpos1.func_185344_t();
