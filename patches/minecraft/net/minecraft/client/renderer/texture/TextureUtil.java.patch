--- ../src-base/minecraft/net/minecraft/client/renderer/texture/TextureUtil.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/texture/TextureUtil.java
@@ -14,6 +14,9 @@
 import net.minecraft.util.ResourceLocation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import optifine.Config;
+import optifine.Mipmaps;
+import optifine.Reflector;
 import org.apache.commons.io.IOUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -63,17 +66,18 @@
         {
             boolean flag = false;
 
-            for (int i = 0; i < p_147949_2_.length; ++i)
+            for (int i = 0; i < p_147949_2_[0].length; ++i)
             {
                 if (p_147949_2_[0][i] >> 24 == 0)
                 {
                     flag = true;
                     break;
                 }
-            }
-
+            }            
+            
             for (int l1 = 1; l1 <= p_147949_0_; ++l1)
             {
+             
                 if (p_147949_2_[l1] != null)
                 {
                     aint[l1] = p_147949_2_[l1];
@@ -83,6 +87,7 @@
                     int[] aint1 = aint[l1 - 1];
                     int[] aint2 = new int[aint1.length >> 2];
                     int j = p_147949_1_ >> l1;
+                    if (j > 0) { // FORGE: forcing higher mipmap levels on odd textures needs this check
                     int k = aint2.length / j;
                     int l = j << 1;
 
@@ -94,16 +99,18 @@
                             aint2[i1 + j1 * j] = func_147943_a(aint1[k1 + 0], aint1[k1 + 1], aint1[k1 + 0 + l], aint1[k1 + 1 + l], flag);
                         }
                     }
+                    } // end if (j > 0)
 
                     aint[l1] = aint2;
                 }
+                
             }
         }
 
         return aint;
     }
 
-    private static int func_147943_a(int p_147943_0_, int p_147943_1_, int p_147943_2_, int p_147943_3_, boolean p_147943_4_)
+    private static int blendColorsO(int p_147943_0_, int p_147943_1_, int p_147943_2_, int p_147943_3_, boolean p_147943_4_)
     {
         if (p_147943_4_)
         {
@@ -153,6 +160,11 @@
         }
     }
 
+    private static int func_147943_a(int p_147943_0_, int p_147943_1_, int p_147943_2_, int p_147943_3_, boolean p_147943_4_)
+    {
+        return Mipmaps.alphaBlend(p_147943_0_, p_147943_1_, p_147943_2_, p_147943_3_);
+    }
+
     private static int func_147944_a(int p_147944_0_, int p_147944_1_, int p_147944_2_, int p_147944_3_, int p_147944_4_)
     {
         float f = func_188543_d(p_147944_0_ >> p_147944_4_);
@@ -168,11 +180,12 @@
         for (int i = 0; i < p_147955_0_.length; ++i)
         {
             int[] aint = p_147955_0_[i];
+            if ((p_147955_1_ >> i <= 0) || (p_147955_2_ >> i <= 0)) break;
             func_147947_a(i, aint, p_147955_1_ >> i, p_147955_2_ >> i, p_147955_3_ >> i, p_147955_4_ >> i, p_147955_5_, p_147955_6_, p_147955_0_.length > 1);
         }
     }
 
-    private static void func_147947_a(int p_147947_0_, int[] p_147947_1_, int p_147947_2_, int p_147947_3_, int p_147947_4_, int p_147947_5_, boolean p_147947_6_, boolean p_147947_7_, boolean p_147947_8_)
+    private static void uploadTextureSubO(int p_147947_0_, int[] p_147947_1_, int p_147947_2_, int p_147947_3_, int p_147947_4_, int p_147947_5_, boolean p_147947_6_, boolean p_147947_7_, boolean p_147947_8_)
     {
         int i = 4194304 / p_147947_2_;
         func_147954_b(p_147947_6_, p_147947_8_);
@@ -189,6 +202,23 @@
         }
     }
 
+    private static void func_147947_a(int p_147947_0_, int[] p_147947_1_, int p_147947_2_, int p_147947_3_, int p_147947_4_, int p_147947_5_, boolean p_147947_6_, boolean p_147947_7_, boolean p_147947_8_)
+    {
+        int i = 4194304 / p_147947_2_;
+        func_147954_b(p_147947_6_, p_147947_8_);
+        func_110997_a(p_147947_7_);
+        int j;
+
+        for (int k = 0; k < p_147947_2_ * p_147947_3_; k += p_147947_2_ * j)
+        {
+            int l = k / p_147947_2_;
+            j = Math.min(i, p_147947_3_ - l);
+            int i1 = p_147947_2_ * j;
+            func_110994_a(p_147947_1_, k, i1);
+            GlStateManager.func_187414_b(3553, p_147947_0_, p_147947_4_, p_147947_5_ + l, p_147947_2_, j, 32993, 33639, field_111000_c);
+        }
+    }
+
     public static int func_110989_a(int p_110989_0_, BufferedImage p_110989_1_, boolean p_110989_2_, boolean p_110989_3_)
     {
         func_110991_a(p_110989_0_, p_110989_1_.getWidth(), p_110989_1_.getHeight());
@@ -200,11 +230,42 @@
         func_180600_a(p_110991_0_, 0, p_110991_1_, p_110991_2_);
     }
 
+    public static void allocateTextureImplO(int glTextureId, int mipmapLevels, int width, int height)
+    {
+        synchronized (net.minecraftforge.fml.client.SplashProgress.class)
+        {
+        func_147942_a(glTextureId);
+        func_94277_a(glTextureId);
+        }
+        if (mipmapLevels >= 0)
+        {
+            GlStateManager.func_187421_b(3553, 33085, mipmapLevels);
+            GlStateManager.func_187421_b(3553, 33082, 0);
+            GlStateManager.func_187421_b(3553, 33083, mipmapLevels);
+            GlStateManager.func_187403_b(3553, 34049, 0.0F);
+        }
+
+        for (int i = 0; i <= mipmapLevels; ++i)
+        {
+            GlStateManager.func_187419_a(3553, i, 6408, width >> i, height >> i, 0, 32993, 33639, (IntBuffer)null);
+        }
+    }
+
     public static void func_180600_a(int p_180600_0_, int p_180600_1_, int p_180600_2_, int p_180600_3_)
     {
-        func_147942_a(p_180600_0_);
-        func_94277_a(p_180600_0_);
+        Object object = TextureUtil.class;
 
+        if (Reflector.SplashScreen.exists())
+        {
+            object = Reflector.SplashScreen.getTargetClass();
+        }
+
+        synchronized (object)
+        {
+            func_147942_a(p_180600_0_);
+            func_94277_a(p_180600_0_);
+        }
+
         if (p_180600_1_ >= 0)
         {
             GlStateManager.func_187421_b(3553, 33085, p_180600_1_);
@@ -219,6 +280,7 @@
         }
     }
 
+
     public static int func_110995_a(int p_110995_0_, BufferedImage p_110995_1_, int p_110995_2_, int p_110995_3_, boolean p_110995_4_, boolean p_110995_5_)
     {
         func_94277_a(p_110995_0_);
@@ -246,7 +308,8 @@
         }
     }
 
-    private static void func_110997_a(boolean p_110997_0_)
+    //op public
+    public static void func_110997_a(boolean p_110997_0_)
     {
         if (p_110997_0_)
         {
@@ -265,7 +328,8 @@
         func_147954_b(p_147951_0_, false);
     }
 
-    private static void func_147954_b(boolean p_147954_0_, boolean p_147954_1_)
+    // op public
+    public static void func_147954_b(boolean p_147954_0_, boolean p_147954_1_)
     {
         if (p_147954_0_)
         {
@@ -273,9 +337,14 @@
             GlStateManager.func_187421_b(3553, 10240, 9729);
         }
         else
-        {
-            GlStateManager.func_187421_b(3553, 10241, p_147954_1_ ? 9986 : 9728);
-            GlStateManager.func_187421_b(3553, 10240, 9728);
+        {/*
+            GlStateManager.glTexParameteri(3553, 10241, p_147954_1_ ? 9986 : 9728);
+            GlStateManager.glTexParameteri(3553, 10240, 9728);*/
+            //op add
+            int i = Config.getMipmapType();
+            GlStateManager.func_187421_b(3553, 10241, p_147954_1_ ? i : 9728);
+            GlStateManager.func_187421_b(3553, 10240, 9728);            
+            //op end
         }
     }
 
@@ -294,9 +363,9 @@
         }
 
         field_111000_c.clear();
+       // if(aint.length == 256) System.out.println("aint lenght: "+ aint.length +",let offset"+p_110994_1_ +","+p_110994_2_);
         field_111000_c.put(aint, p_110994_1_, p_110994_2_);
-        field_111000_c.position(0).limit(p_110994_2_);
-    }
+        field_111000_c.position(0).limit(p_110994_2_);    }
 
     static void func_94277_a(int p_94277_0_)
     {
