--- ../src-base/minecraft/net/minecraft/client/renderer/ThreadDownloadImageData.java
+++ ../src-work/minecraft/net/minecraft/client/renderer/ThreadDownloadImageData.java
@@ -1,10 +1,13 @@
 package net.minecraft.client.renderer;
 
 import java.awt.image.BufferedImage;
+import java.io.ByteArrayInputStream;
 import java.io.File;
 import java.io.IOException;
 import java.net.HttpURLConnection;
+import java.net.Proxy;
 import java.net.URL;
+import java.net.Proxy.Type;
 import java.util.concurrent.atomic.AtomicInteger;
 import javax.annotation.Nullable;
 import javax.imageio.ImageIO;
@@ -15,6 +18,11 @@
 import net.minecraft.util.ResourceLocation;
 import net.minecraftforge.fml.relauncher.Side;
 import net.minecraftforge.fml.relauncher.SideOnly;
+import optifine.CapeImageBuffer;
+import optifine.Config;
+import optifine.HttpPipeline;
+import optifine.HttpRequest;
+import optifine.HttpResponse;
 import org.apache.commons.io.FileUtils;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -34,6 +42,9 @@
     @Nullable
     private Thread field_110561_e;
     private boolean field_110559_g;
+    //op add
+    public Boolean imageFound = null;
+    public boolean pipeline = false;
 
     public ThreadDownloadImageData(@Nullable File p_i1049_1_, String p_i1049_2_, ResourceLocation p_i1049_3_, @Nullable IImageBuffer p_i1049_4_)
     {
@@ -74,6 +85,7 @@
         {
             this.field_110563_c.func_152634_a();
         }
+        this.imageFound = this.field_110560_d != null;
     }
 
     public void func_110551_a(IResourceManager p_110551_1_) throws IOException
@@ -97,6 +109,9 @@
                     {
                         this.func_147641_a(this.field_110563_c.func_78432_a(this.field_110560_d));
                     }
+                    
+                    //op add
+                    this.loadingFinished();
                 }
                 catch (IOException ioexception)
                 {
@@ -111,7 +126,7 @@
         }
     }
 
-    protected void func_152433_a()
+    protected void loadTextureFromServerO()
     {
         this.field_110561_e = new Thread("Texture Downloader #" + field_147643_d.incrementAndGet())
         {
@@ -167,4 +182,153 @@
         this.field_110561_e.setDaemon(true);
         this.field_110561_e.start();
     }
+
+
+    protected void func_152433_a()
+    {
+        this.field_110561_e = new Thread("Texture Downloader #" + field_147643_d.incrementAndGet())
+        {
+            public void run()
+            {
+                HttpURLConnection httpurlconnection = null;
+                ThreadDownloadImageData.field_147644_c.debug("Downloading http texture from {} to {}", ThreadDownloadImageData.this.field_110562_b, ThreadDownloadImageData.this.field_152434_e);
+
+                if (ThreadDownloadImageData.this.shouldPipeline())
+                {
+                    ThreadDownloadImageData.this.loadPipelined();
+                }
+                else
+                {
+                    try
+                    {
+                        httpurlconnection = (HttpURLConnection)(new URL(ThreadDownloadImageData.this.field_110562_b)).openConnection(Minecraft.func_71410_x().func_110437_J());
+                        httpurlconnection.setDoInput(true);
+                        httpurlconnection.setDoOutput(false);
+                        httpurlconnection.connect();
+
+                        if (httpurlconnection.getResponseCode() / 100 != 2)
+                        {
+                            if (httpurlconnection.getErrorStream() != null)
+                            {
+                                Config.readAll(httpurlconnection.getErrorStream());
+                            }
+
+                            return;
+                        }
+
+                        BufferedImage bufferedimage;
+
+                        if (ThreadDownloadImageData.this.field_152434_e != null)
+                        {
+                            FileUtils.copyInputStreamToFile(httpurlconnection.getInputStream(), ThreadDownloadImageData.this.field_152434_e);
+                            bufferedimage = ImageIO.read(ThreadDownloadImageData.this.field_152434_e);
+                        }
+                        else
+                        {
+                            bufferedimage = TextureUtil.func_177053_a(httpurlconnection.getInputStream());
+                        }
+
+                        if (ThreadDownloadImageData.this.field_110563_c != null)
+                        {
+                            bufferedimage = ThreadDownloadImageData.this.field_110563_c.func_78432_a(bufferedimage);
+                        }
+
+                        ThreadDownloadImageData.this.func_147641_a(bufferedimage);
+                    }
+                    catch (Exception exception1)
+                    {
+                        ThreadDownloadImageData.field_147644_c.error("Couldn't download http texture: " + exception1.getMessage());
+                        return;
+                    }
+                    finally
+                    {
+                        if (httpurlconnection != null)
+                        {
+                            httpurlconnection.disconnect();
+                        }
+
+                        ThreadDownloadImageData.this.loadingFinished();
+                    }
+                }
+            }
+        };
+        this.field_110561_e.setDaemon(true);
+        this.field_110561_e.start();
+    }
+
+    private boolean shouldPipeline()
+    {
+        if (!this.pipeline)
+        {
+            return false;
+        }
+        else
+        {
+            Proxy proxy = Minecraft.func_71410_x().func_110437_J();
+
+            if (proxy.type() != Type.DIRECT && proxy.type() != Type.SOCKS)
+            {
+                return false;
+            }
+            else
+            {
+                return this.field_110562_b.startsWith("http://");
+            }
+        }
+    }
+
+    private void loadPipelined()
+    {
+        try
+        {
+            HttpRequest httprequest = HttpPipeline.makeRequest(this.field_110562_b, Minecraft.func_71410_x().func_110437_J());
+            HttpResponse httpresponse = HttpPipeline.executeRequest(httprequest);
+
+            if (httpresponse.getStatus() / 100 != 2)
+            {
+                return;
+            }
+
+            byte[] abyte = httpresponse.getBody();
+            ByteArrayInputStream bytearrayinputstream = new ByteArrayInputStream(abyte);
+            BufferedImage bufferedimage;
+
+            if (this.field_152434_e != null)
+            {
+                FileUtils.copyInputStreamToFile(bytearrayinputstream, this.field_152434_e);
+                bufferedimage = ImageIO.read(this.field_152434_e);
+            }
+            else
+            {
+                bufferedimage = TextureUtil.func_177053_a(bytearrayinputstream);
+            }
+
+            if (this.field_110563_c != null)
+            {
+                bufferedimage = this.field_110563_c.func_78432_a(bufferedimage);
+            }
+
+            this.func_147641_a(bufferedimage);
+        }
+        catch (Exception exception)
+        {
+            field_147644_c.error("Couldn't download http texture: " + exception.getClass().getName() + ": " + exception.getMessage());
+            return;
+        }
+        finally
+        {
+            this.loadingFinished();
+        }
+    }
+
+    private void loadingFinished()
+    {
+        this.imageFound = this.field_110560_d != null;
+
+        if (this.field_110563_c instanceof CapeImageBuffer)
+        {
+            CapeImageBuffer capeimagebuffer = (CapeImageBuffer)this.field_110563_c;
+            capeimagebuffer.cleanup();
+        }
+    }
 }
